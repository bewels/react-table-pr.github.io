{"version":3,"sources":["components/table/table.js","components/createTable/createTable.js","components/searchPanel/searchPanel.js","components/app/app.js","index.js"],"names":["Table","table","pageId","setPageId","width","height","setColumn","useState","fileds","setFileds","count","useRef","useEffect","current","tb","i","cells","j","push","onClick","e","target","getAttribute","id","tableContent","Date","now","toString","columnStr","button","className","name","length","border","style","background","align","CreateTable","create","setCreate","createTable","paramTabel","setParamTabel","value","onChange","type","required","placeholder","htmlFor","SearchPanel","onSearch","term","setTerm","App","mainInput","fieldId","tables","setTables","onStyle","styles","field","document","getElementById","classList","toggle","key","indexOf","console","log","text","newTable","slice","selectField","ref","paramTable","filed","textContent","focus","ReactDOM","render"],"mappings":"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","file":"static/js/main.7534f5ca.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport './table.css'\r\n\r\nexport default function Table ({table, pageId, setPageId, width, height, setColumn}) {\r\n\r\n    const [fileds, setFileds] = useState([])\r\n    const count = useRef(0)\r\n\r\n    useEffect(() => {\r\n        count.current = 0\r\n\r\n        const tb = []\r\n\r\n        for(let i = 0; i < height; i++){\r\n            const cells = []\r\n            for(let j = 0; j < width; j++){\r\n\r\n                cells.push(<td \r\n                                key={Date.now().toString() + j} \r\n                                onClick={(e) => setColumn(e, e.target.getAttribute('id'))} \r\n                                id={count.current}\r\n                            >{table[pageId].tableContent[count.current]}</td>)\r\n\r\n                            count.current++\r\n            }\r\n\r\n            tb.push(<tr key={i}>{cells}</tr>)\r\n        }\r\n\r\n        setFileds([...tb])\r\n    }, [table[pageId]])\r\n\r\n    const columnStr = []\r\n    const button = []\r\n\r\n    for(let i = 0; i < table.length; i++){\r\n        button.push(<button key={i} className=\"btn btn-page\" onClick={() => setPageId(i)}>{table[i].name}</button>)\r\n    }\r\n\r\n    for(let i = 0; i < width; i++) {\r\n        columnStr.push(<td key={i}>{i+1}</td>)\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <table border=\"1\" width=\"100%\" height=\"100%\" >\r\n                <caption className=\"text-center\">{table[pageId].name}</caption>\r\n                <thead style={{background: \"#fc0\"}} align=\"center\">\r\n                    \r\n                    <tr>\r\n                        {columnStr}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    fileds\r\n                }\r\n                </tbody>\r\n            </table>\r\n                <div className=\"page-tabs\">\r\n                    {button}\r\n                </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport Table from '../table/table'\r\n\r\nimport './createTable.css'\r\n\r\nexport default function CreateTable({create, setCreate, createTable, table, pageId, setPageId, setColumn}) {\r\n    const [paramTabel, setParamTabel] = useState({name: '', width: '', height: ''})\r\n\r\n\r\n    const setSize = () => {\r\n        if (!+paramTabel.width || !+paramTabel.height || !paramTabel.name){\r\n            return\r\n        }\r\n        createTable(paramTabel)\r\n        setCreate(true)\r\n    }\r\n\r\n    if (!create) {\r\n        return (\r\n        <>\r\n            <div className=\"create-form\">\r\n                <form>\r\n                    <input \r\n                        value={paramTabel.name} \r\n                        onChange={(e) => setParamTabel({...paramTabel, name:e.target.value})} \r\n                        type=\"text\" \r\n                        id=\"name\" \r\n                        className=\"form-control table-form-input\"\r\n                        required\r\n                        placeholder=\"Имя таблиы\"\r\n                    />\r\n                    <label htmlFor=\"width\">Ширина</label>\r\n                    <input \r\n                        value={paramTabel.width} \r\n                        onChange={(e) => setParamTabel({...paramTabel, width:e.target.value})} \r\n                        type=\"text\" \r\n                        id=\"width\" \r\n                        className=\"form-control table-form-input\"\r\n                        required\r\n                        placeholder=\"Ширина\"\r\n                    />\r\n                    <label htmlFor=\"height\">Высота</label>\r\n                    <input \r\n                        value={paramTabel.height} \r\n                        onChange={(e) => setParamTabel({...paramTabel, height:e.target.value})} \r\n                        type=\"text\" \r\n                        className=\"form-control table-form-input\"\r\n                        id=\"height\" \r\n                        required\r\n                        placeholder=\"Высота\"\r\n                    />\r\n                    <button className=\"btn create-btn\" onClick={setSize}>Создать таблицу</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n    return <Table table={table} pageId={pageId} setPageId={setPageId} width={paramTabel.width} height={paramTabel.height} setColumn={setColumn}/>\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function SearchPanel({onSearch}) {\r\n    const [term, setTerm] = useState('')\r\n\r\n    const a = (e) => {\r\n        const term = e.target.value\r\n        setTerm(term)\r\n        onSearch(term)\r\n    }\r\n\r\n    return (\r\n        <input \r\n            value={term}\r\n            onChange={a}\r\n            type=\"text\"\r\n            placeholder='Поиск'\r\n        />\r\n    )\r\n}","import React, { useRef, useState } from 'react';\r\nimport CreateTable from '../createTable/createTable'\r\nimport SearchPanel from '../searchPanel/searchPanel'\r\n\r\nimport './app.css'\r\n\r\nexport default function App() {\r\n    const mainInput = useRef(null)\r\n    const fieldId = useRef(null)\r\n\r\n    const [tables, setTables] = useState([])\r\n    const [create, setCreate] = useState(false)\r\n    const [pageId, setPageId] = useState(0)\r\n    // const term = useState('')\r\n\r\n\r\n\r\n    const selectField = (e) => {\r\n        if (!fieldId || tables.length <= 0){\r\n            console.log('Err');\r\n            return\r\n        }\r\n\r\n        const text = {}\r\n\r\n        text[fieldId.current] = e.target.value\r\n\r\n        const newTable = {...tables[pageId], tableContent: {...tables[pageId].tableContent, ...text}}\r\n\r\n        setTables([...tables.slice(0, pageId), newTable, ...tables.slice(pageId + 1)])\r\n    }\r\n    const setColumn = (e, id) => {\r\n\r\n        fieldId.current = id\r\n        mainInput.current.value = e.target.textContent\r\n        mainInput.current.focus()\r\n\r\n     }\r\n\r\n    const createTable = (paramTable) => {\r\n        const {name, width, height} = paramTable\r\n        const filed = {}\r\n        for(let i = 0; i < (height * width); i++){\r\n            filed[i] = ' '\r\n        }\r\n        setTables([...tables, {name: name, tableContent: {...filed}}])\r\n        \r\n    }\r\n\r\n\r\n    const onStyle = (styles) => {\r\n        if (tables.length === 0) return\r\n        const field = document.getElementById(fieldId.current)\r\n        switch (styles) {\r\n            case 'bold':\r\n                field.classList.toggle('bold')\r\n                return\r\n            case 'italic':\r\n                field.classList.toggle('italic')\r\n                return\r\n            case 'underline':\r\n                field.classList.toggle('underline')\r\n                return\r\n            default:\r\n                return\r\n        }\r\n    }\r\n    \r\n    const onSearch = (term) => {\r\n        if (tables.length > 0) {\r\n            for(let key in tables[pageId].tableContent){\r\n                document.getElementById(key).style.background = ''\r\n                if (tables[pageId].tableContent[key].indexOf(term) > -1 && term != ''){\r\n                    document.getElementById(key).style.background = 'red'\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pagination\">\r\n                <div className='container text-center pagination-button'>\r\n                <SearchPanel onSearch={onSearch}/>\r\n                    <i className=\"bi bi-type-bold btn params-btn\" onClick={() => onStyle('bold')}></i>\r\n                    <i className=\"bi bi-type-italic btn params-btn\" onClick={() => onStyle('italic')}></i>\r\n                    <i className=\"bi bi-type-underline btn params-btn\" onClick={() => onStyle('underline')}></i>\r\n                    <i className=\"bi bi-plus-square btn params-btn\" onClick={() => setCreate(false)}></i>\r\n                </div>\r\n            </div>\r\n            <input\r\n                onChange={(e) => {\r\n                    selectField(e)\r\n                }} \r\n                ref={mainInput} \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n            />\r\n            <CreateTable \r\n                pageId={pageId} \r\n                setPageId={setPageId} \r\n                create={create} \r\n                setCreate={setCreate} \r\n                table={tables} \r\n                createTable={createTable}\r\n                setColumn={setColumn}\r\n                />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}